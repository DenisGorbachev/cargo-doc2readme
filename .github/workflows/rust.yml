name: Rust

on:
  push:
    branches: [main, "*.x"]
  pull_request:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Get Rust Version
        id: rust-version
        run: echo "::set-output name=version::$(cargo -V | head -n1 | awk '{print $2}')"
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-rust-${{ steps.rust-version.outputs.version }}
      
      - run: cargo test && cargo run && git diff --exit-code README.md
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: info
  
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
  
  docker:
    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Log In at ghcr.io
        run: echo "${{secrets.GITHUB_TOKEN}}" | docker login ghcr.io -u msrd0 --password-stdin
      - name: Build and Push image to ghcr.io
        run: |
          image="ghcr.io/msrd0/cargo-doc2readme"
          cache="$image:_cache"
          tag="$image:$(git describe --tags)"
          
          echo "==> Pulling old docker image to reuse cache"
          docker pull $image || true
          docker pull $cache || true
          
          echo "==> Building docker image"
          docker build . --pull --target builder --cache-from "$cache" --tag "$cache"
          docker build . --pull --cache-from "$cache" --cache-from "$image" --tag "$image"
          docker tag "$image" "$tag"
          
          echo "==> Pushing docker image"
          docker push "$tag"
          docker push "$image"
          docker push "$cache"
